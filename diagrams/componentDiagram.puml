@startuml
skinparam classAttributeIconSize 0
skinparam wrapWidth 100
skinparam maxMessageSize 100

' Set page size to A4 vertical with margins
skinparam page {
    size A4
    orientation portrait
    margin 10
}

' Use vertical layout for overall structure
top to bottom direction

@startuml
skinparam classAttributeIconSize 0
skinparam wrapWidth 80
skinparam maxMessageSize 80


' Set page size to A4 vertical with margins
skinparam page {
    size A4
    orientation portrait
    margin 10
}

' Use vertical layout for overall structure
top to bottom direction

package features {
    ' First column
    package homepage {
        class HomepageComponent
    }

    package auth {
        class LoginComponent
        class RegistrationComponent
    }

    package doctors {
        class DoctorsComponent
        class DoctorDetailsComponent
        class DoctorService
    }

    ' Hidden line to create space for second column and align homepage with manage_appointments
    homepage -[hidden]right-> manage_appointments

    ' Second column
    package manage_appointments {
        class ManageAppointmentsComponent
        class AppointmentComponent
        class AppointmentFormComponent
    }

    package manage_users {
        class ManageUsersPageComponent
        class AddUserComponent
        class EditUserComponent
    }

    package my_appointments {
        class MyAppointmentsComponent
    }

    ' Align columns
    homepage -[hidden]down-> auth
    auth -[hidden]down-> doctors

    manage_appointments -[hidden]down-> manage_users
    manage_users -[hidden]down-> my_appointments
}

package app {
    class AppComponent
}

class Router

package core {
    left to right direction

    package authentication {
        class AuthGuard
        class AuthService
        class RegistrationService
        class RequestInterceptor
    }

    package constants {
        class PathConstants
    }

    package enums {
        enum UserRole
    }

    package services {
        class UserService
    }

    package models {
        class User
        class Doctor
        class Examination
        class Appointment
        class Medicine
        class Address
        class DoctorDetails
        class AuthData
    }

    authentication -[hidden]-> constants
    authentication -[hidden]-> enums
    authentication -[hidden]-> services
    authentication -[hidden]-> models
    constants -[hidden]-> enums
    constants -[hidden]-> services
    constants -[hidden]-> models
    enums -[hidden]-> services
    enums -[hidden]-> models
    services -[hidden]-> models
}

package shared {
    left to right direction

    package components {
        class SideNavComponent
        class SpinnerComponent

        package nav{
        class NavItemComponent
        class NavComponent
        }

        class FooterComponent
        class PaginatorComponent
        class UserFormComponent
    }

    package dialog {
        class DialogComponent
        class DialogService
    }

    package helpers {
        class DateHelper
        class HttpParamsHelper
        class TableHelper
    }

    package services {
        class SnackbarService
    }
    
    components -[hidden]-> dialog
    components -[hidden]-> helpers
    components -[hidden]-> services
    dialog -[hidden]-> helpers
    dialog -[hidden]-> services
    helpers -[hidden]-> services
}
AppComponent --> Router : uses

NavComponent --> NavItemComponent

Router --> features : routes

features --> core : uses
features --> shared : uses

features -[hidden]down-> app
app -[hidden]down-> core


@enduml